input {
  kafka {
        bootstrap_servers  => ["192.168.1.1:9092,192.168.1.2:9092,192.168.1.3:9092,192.168.1.4:9092"]
        topics => ["testlog"]
        group_id => "iflog-testlog-1"
        auto_offset_reset => "latest" #从最新的偏移量开始消费
        decorate_events => false #此属性会将当前topic、offset、group、partition等信息也带到message中
        consumer_threads => 16
        type => "testlog"
  }
}

filter {
    mutate {
      gsub => ["message","\|","   "]
    }

    json {
      source => "message"
      remove_field => "@version"
      remove_field => "_id"
      remove_field => "_score"
      remove_field => "_type"
      remove_field => "tags"
      remove_field => "_source.tags"
      remove_field => "_source.input"
      remove_field => "_source.tags"
      remove_field => "kubernetes.container.name"
      remove_field => "kubernetes.labels.ns"
      remove_field => "source"
      remove_field => "prospector"
      remove_field => "_type"
      remove_field => "input.type"
      remove_field => "beat"
      remove_field => "kubernetes.labels.controller-revision-hash"
    }

    grok {
    match => { "message" => "%{IP:client_ip}   %{INT:client_port}   %{NOTSPACE:haproxy_timestamp}   %{NOTSPACE:frontend_name}   %{NOTSPACE:backend_name}   %{NOTSPACE:server_name}   %{INT:time_client_req:int}   %{INT:time_queue:int}   %{INT:time_backend_connect:int}   %{INT:time_server_response:int}   %{NOTSPACE:time_duration:int}   %{INT:status_code}   %{NOTSPACE:bytes_read}   %{NOTSPACE:termination_state}   HTTP/%{NUMBER:http_version}   %{DATA:http_host}   %{DATA:http_ua}   %{DATA:http_referer}   %{DATA:http_method}   %{NOTSPACE:http_request}" }
    remove_field => [ "message" ]
    }

    if [status_code] == "200" {
      drop {}
    }
}

output {
  if [type]=="testlog"{
  elasticsearch {
    hosts => ["es.cloud.com:9200"]
    index => "testlog-%{+YYYY.MM.dd}"
    manage_template => false
    template_name => "testlog-template"
    template_overwrite => true
    user => "user"
    password => "password"
}}
}